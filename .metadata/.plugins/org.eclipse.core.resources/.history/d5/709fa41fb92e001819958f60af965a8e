package objects;

import java.util.ArrayList;

import parser.FOLMatchEnum;
import exceptions.InvalidInputException;

public class FOLFunction extends FOLElement
{
    public int number;

    public FOLElement[] arguments;

    public FOLFunctionPrototype prototype;

    // TODO: Add Arguments

    public FOLFunction(String name, FOLFunctionPrototype prototype, int number, FOLElement[] arguments, ArrayList<FOLFunctionPrototype> prototypes) throws InvalidInputException
    {
        super(name);
        this.prototype = prototype;
        this.number = number;
        this.arguments = arguments;

        boolean hasNoPrototype = true;
        for (FOLFunctionPrototype p : prototypes)
        {
            if (this.name.equals(p.name) && this.number == p.number)
                hasNoPrototype = false;
        }

        if (hasNoPrototype)
            throw new InvalidInputException("Cannot initiate function " + name + ". No matching prototype declaration found.");

    }

    @Override
    public FOLMatchEnum compareTo(FOLElement e)
    {
        if(e instanceof FOLFunction)
        {
            if (! e.name.equals(this.name))
            {
                
            }
        }
        
        return FOLMatchEnum.NoMatch;
    }
}
